events {
    worker_connections 512;
}

http {
    # docker net default resolver addr
    resolver 127.0.0.11 ipv6=off valid=30s;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    server {
        listen 443 ssl;

        http2 on;

        ssl_certificate     tls/cert.pem;
        ssl_certificate_key tls/key.pem;

        location = /peerchat {
            return 301 https://$host/peerchat/;
        }
        location ~ /peerchat(.+) {
            include mime.types;
            root /var/www/peerchat;
            try_files $1 /index.html =404;
        }
        location /api {
            proxy_http_version 1.1;
            proxy_pass http://api_backend;
        }
        location /signal {
            proxy_pass http://ws_backend;
            proxy_http_version 1.1;
            proxy_read_timeout 6m;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }
        location / {
            return 404;
        }
    }

    server {
        listen 88;

        location /signal {
            proxy_pass http://ws_backend;
            proxy_http_version 1.1;
            proxy_read_timeout 6m;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }

        location / {
            return 404;
        }
    }

    server {
        listen 80;
        return 302 https://$host$request_uri;
    }

    upstream api_backend {
        server 192.168.1.122:8080;
    }
    upstream ws_backend {
        server 192.168.1.122:8888;
    }
}
